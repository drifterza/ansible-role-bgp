---
# Copyright 2019, Internet Solutions.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

bird_package_state: latest

bird_conf_dir: /etc/bird

bird_router_id: "{{ ansible_default_ipv4['address'] }}" 

# Force an update of the network facts before building the configuration
# This is useful when protocol auto detection is used, because the network may
# have changed since facts were last gathered if they have been cached a while.
bird_gather_net_facts: true

# Auto-enable bird if an ipv4 default route is present
# Set to true/false to override auto detection
bird_ipv4_enabled: detect

# Enable the following for Route Reflector mode. See the README.md for examples
bird_bgp_rr_enabled: false

# Enable the following for Route Server mode. See the README.md for examples
bird_bgp_rs_enabled: false

# Enable the following for static routes. See the README.md for examples
bird_bgp_static_enabled: false

bird_syslog_location: "/var/log/bird.log"

bird_configs:
  - config_file: "{{ bird_conf_dir }}/bird.conf"
    enabled: "{{ bird_ipv4_enabled }}"
    service: bird
    includes: "{{ bird_ipv4_includes }}"
    protocols: "{{ bird_ipv4_protocols }}"

bird_ipv4_includes:
  - bird.ipv4.filters # This has to be loaded first or else the functions are undefined for use in the bird.bgp.clients #
  - bird.bgp.clients

bird_ipv4_protocols: "{{ bird_default_protocols }}"
bird_local_cidr: "127.0.0.1"
bird_neighbor_ipaddress: "127.0.0.1"
bird_friendly_name: "bird"  # Ensure the friendly name uses lowercase and underscores to create long names #
bird_default_protocols:
  kernel: "{{ bird_protocols_kernel }}"
  device: "{{ bird_protocols_device }}"

bird_protocols_device: |
  scan time 10;

bird_protocols_kernel: |
  learn;
  persist;
  scan time 10;
  export all;
  import filter default_gw_filter;
  
rr:
  172.17.0.0:
    bird_friendly_name: "bird_rr" # Ensure the friendly name uses lowercase and underscores to create long names #
    bird_local_as: 65000 # Used to override the template import
    bird_neighbor_ipaddress: 172.16.0.2 # Only internal neighbor can be RR client #
    bird_neighbor_as: 65000 # ASN needs to be the same ASN as the peer to act as a RR client #
    bird_cluster_id: 1.0.0.1 # Needed to peer with Calico #

rs:
  172.18.0.0:
    bird_friendly_name: "bird_rs" # Ensure the friendly name uses lowercase and underscores to create long names #
    bird_local_as: 65000 # Used to override the template import
    bird_neighbor_ipaddress: 172.17.0.2 # Only external neighbor can be RS client #
    bird_neighbor_as: 65001 # ASN needs to be the PEERS ASN #

static:
  8.8.8.8:
    bird_friendly_name: "bird_static" # Ensure the friendly name uses lowercase and underscores to create long names #
    ipaddress: 8.8.8.8
    subnet: 255.255.255.255
    bird_neighbor_ipaddress: 172.16.0.2