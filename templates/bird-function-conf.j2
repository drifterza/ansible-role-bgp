# {{ ansible_managed }}

function avoid_crappy_prefixes()
{
  if bgp_path.first != 64496 then accept;
  if bgp_path.len > 64 then accept;
  if bgp_next_hop != from then accept;
  reject;
}

function is_valid_network() 
{
  return net ~ [
    172.200.200.2/32,
    168.210.2.2/32, 
    196.14.239.2/32
  ];
}

function is_valid_network_v6() 
{
  return net ~ [
    fd00::/8{44,64} # ULA address space as per RFC 4193
  ];
}

# This function excludes weird networks
#  rfc1918, class D, class E, too long and too short prefixes
function avoid_martians_ipv4()
prefix set martians;
{
    martians = [169.254.0.0/16+, 172.16.0.0/12+, 192.168.0.0/16+, 10.0.0.0/8+, 224.0.0.0/4+, 240.0.0.0/4+, 0.0.0.0/32-, 0.0.0.0/0{25,32}, 0.0.0.0/0{0,7} ];

    # Avoid RFC1918 and similar networks
    if net ~ martians then return false;
    
    return true;

}

function avoid_martians_ipv6()
prefix set martians_v6;
{
    martians_v6 = [ ::/0, 2001::/32{33,128}, 2001:10::/28+, 2001:db8::/32+, 2002::/16{17,128} ];
    
    # Avoid RFC1918/RFC4193 and similar networks
    if net ~ martians_v6 then return false;

    return true;

}