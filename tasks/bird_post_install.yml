---
# Copyright 2019, Internet Solutions.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Set fact for automatically enabling networks (IPv4)
  set_fact:
    bird_ipv4_enabled: "{{ ansible_default_ipv4 is defined | bool }}"
  when:
    - "bird_ipv4_enabled == 'detect'"
  tags:
    - bird-config
    - bird-init

- name: Ensure log file exists and is owned correctly
  file:
    path: "{{ bird_syslog_location }}"
    owner: bird
    group: bird
    mode: '0664'
    state: touch
  tags:
    - bird-config

- name: Drop bird configuration files
  template:
    src: bird-conf.j2
    dest: "{{ item.config_file }}"
    owner: "root"
    group: "root"
    mode: "0644"
  register: bird_results
  when: "item.enabled | bool"
  loop: "{{ bird_configs }}"
  tags:
    - bird-config
 
- name: Drop include configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "0644"
  register: bird_results_includes
  loop: 
    - { src: 'bird-bgp-clients.j2', dest: '/etc/bird.bgp.clients' }
    - { src: 'bird-ipv4-filters.j2', dest: '/etc/bird.ipv4.filters' }
  tags:
    - bird-config

- name: Restart bird services
  service:
    name: "bird"
    state: restarted
  when: "item is changed"
  ignore_errors: "{{ ansible_check_mode | default(false) }}"
  loop: "{{ bird_results.results }}"
  tags:
    - upstart-init
    - bird-init

- name: Restart bird services after includes
  service:
    name: "bird"
    state: restarted
  when: "item is changed"
  ignore_errors: "{{ ansible_check_mode | default(false) }}"
  loop: "{{ bird_results_includes.results }}"
  tags:
    - upstart-init
    - bird-init

- name: Disable inactive BIRD BGP services and remove from bootup start
  service:
    name: "{{ item.service }}"
    enabled: false
    state: stopped
  when:
    - "not item.enabled | bool"
    - "item.enabled != 'skip'"
  loop: "{{ bird_configs }}"
  ignore_errors: "{{ ansible_check_mode | default(false) }}"
  tags:
    - upstart-init
    - bird-init

- name: Start and activate BIRD BGP services on startup
  service:
    name: "{{ item.service }}"
    enabled: true
    state: started
  when:
    - "item.enabled | bool"
    - "item.enabled != 'skip'"
  loop: "{{ bird_configs }}"
  ignore_errors: "{{ ansible_check_mode | default(false) }}"
  tags:
    - upstart-init
    - bird-init

- name: Disable inactive firewalld services and remove from bootup start
  systemd: 
    name: firewalld 
    enabled: false
    state: stopped
  when:
    - "not enable_firewalld | bool"
  ignore_errors: "{{ ansible_check_mode | default(false) }}"
  tags:
    - upstart-init
    - bird-init

- name: Enable firewalld services and add to bootup start
  systemd: 
    name: firewalld 
    enabled: true
  when:
    - "enable_firewalld | bool"
  ignore_errors: "{{ ansible_check_mode | default(false) }}"
  tags:
    - upstart-init
    - bird-init

- name: Add BGP TCP firewall rules
  firewalld:
    port: '{{ item }}'
    permanent: true
    state: enabled
  loop:
    - "179/tcp"
    - "179/udp"
  when:
    - "enable_firewalld | bool"

- name: Start active firewalld services and add to bootup start
  service:
    name: firewalld
    enabled: true
    state: started
  when:
    - "enable_firewalld | bool"
  ignore_errors: "{{ ansible_check_mode | default(false) }}"
  tags:
    - upstart-init
    - bird-init

- include_tasks: bird_security.yml

- name: Reload firewalld as a last check
  command: /bin/firewall-cmd --reload
  become: yes
  when:
    - "enable_firewalld | bool"
    